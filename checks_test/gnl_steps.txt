Comments:
\\\
The buffer size will be defined upon compilation.
    meaning: I don't know exactly how many chars will be read in advance?
the read function will read nbytes of data from the fd (input parameter) into the buffer pointer by buff 
///


First step: 
Read the opened file; the number of bytes read per loop sycle is determined by BUFFER_SIZE 
> Copy and append the chars read (temporarily) stored in buffer to an allocated memory area called 'stash' to keep track of the chars read 
> In stash; iterate through the chars stored until you find the new_line char or the end of the chars read.
> if no new_line char is found, new loop sycle: the read function has to be recalled until either the newline char is found or the end of the file is reached.

get_first_line
	// what happens if stash[i] = 0 (this eol)? the loop can continue bc it needs to read
	// nbytes until the newline char is found
	// the loop only needs to stop when newline is found or when eof (chars_read == 0)
	
Second step:
> if new_line char found in stash, allocate memory to store this new line and copy it from the stash (memory area where copied buffer is kept)

Finally,
> Remove the first line from the stash (memory area where the copy is from buffer) so that upon reopening the same file,
the stash only contains the other lines previously read by buffer but without the first line read.


!! check memory allocation, where do I need to free the allocated memory???

Test cases:
> a normal txt file (containing alfanumeric chars) - f.e. cat.txt
> an empty file - empty.txt